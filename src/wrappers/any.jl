# Autogenerated wrapper script for oneAPI_Level_Zero_Headers_jll for any
export ze_api

## Global variables
PATH = ""
LIBPATH = ""
LIBPATH_env = "LD_LIBRARY_PATH"
LIBPATH_default = ""

# Relative path to `ze_api`
const ze_api_splitpath = ["include", "level_zero", "ze_api.h"]

# This will be filled out by __init__() for all products, as it must be done at runtime
ze_api_path = ""

# ze_api-specific global declaration
# This will be filled out by __init__()
ze_api = ""


"""
Open all libraries
"""
function __init__()
    global artifact_dir = abspath(artifact"oneAPI_Level_Zero_Headers")

    # Initialize PATH and LIBPATH environment variable listings
    global PATH_list, LIBPATH_list
    global ze_api_path = normpath(joinpath(artifact_dir, ze_api_splitpath...))

    global ze_api = ze_api_path
    # Filter out duplicate and empty entries in our PATH and LIBPATH entries
    filter!(!isempty, unique!(PATH_list))
    filter!(!isempty, unique!(LIBPATH_list))
    global PATH = join(PATH_list, ':')
    global LIBPATH = join(vcat(LIBPATH_list, [joinpath(Sys.BINDIR, Base.LIBDIR, "julia"), joinpath(Sys.BINDIR, Base.LIBDIR)]), ':')

    
end  # __init__()

